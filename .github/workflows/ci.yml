name: ci

on:
  push:
    branches:
      - columbia

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Free up space on Github image
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: openv2x/lidar:columbia
          build-args: |
            GIT_BRANCH=${{ github.ref_name }}
            REPO_URL=https://github.com/open-v2x/lidar
            GIT_COMMIT=${{ github.sha }}

  acr:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: sync image to ACR
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.FQ_HOST }}
          username: ${{ secrets.FQ_USERNAME }}
          key: ${{ secrets.FQ_KEY }}
          port: ${{ secrets.FQ_PORT }}
          command_timeout: 60m
          script: |
            set -e

            (docker images | grep none | awk '{print $3}' | xargs -I{} docker rmi -f {}) || true
            docker pull openv2x/lidar:columbia
            docker tag openv2x/lidar:columbia registry.cn-shanghai.aliyuncs.com/openv2x/lidar:columbia
            docker push registry.cn-shanghai.aliyuncs.com/openv2x/lidar:columbia

  ssh:
    needs: acr
    runs-on: ubuntu-latest
    steps:
      - name: apply to cicd environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.V2XLAB_HOST }}
          username: ${{ secrets.V2XLAB_USERNAME }}
          password: ${{ secrets.V2XLAB_PASSWORD }}
          port: ${{ secrets.V2XLAB_PORT }}
          command_timeout: 60m
          script: |
            set -e

            images=(openpcdet udp_client)
            for i in ${images[@]}; do
              docker stop $i 2>/dev/null || true
              docker rm $i 2>/dev/null || true
            done

            docker rmi registry.cn-shanghai.aliyuncs.com/openv2x/lidar:columbia || true
            docker pull registry.cn-shanghai.aliyuncs.com/openv2x/lidar:columbia
            nvidia-docker run --name openpcdet -d --restart=always -e mqtt_host=${{ secrets.MQTT_HOST }} -e mqtt_password=${{ secrets.MQTT_PASSWORD }} -p 28300:28300 -p 57142:57142 --net=host --gpus all registry.cn-shanghai.aliyuncs.com/openv2x/lidar:columbia
            docker run --name udp_client -d --restart=always -e udp_host=127.0.0.1  -v /home/v2x/CaaS/datasets/points:/root/OpenPCDet/data/points -e dir_path=/root/OpenPCDet/data/points --net=host registry.cn-shanghai.aliyuncs.com/openv2x/lidar:columbia python /root/OpenPCDet/svc/udp_client.py

  aio-master-ssh:
    needs: acr
    runs-on: ubuntu-latest
    steps:
      - name: apply to aio env
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AIO_ALBANY_HOST }}
          username: ${{ secrets.AIO_ALBANY_USERNAME }}
          key: ${{ secrets.AIO_ALBANY_KEY }}
          port: ${{ secrets.AIO_ALBANY_PORT }}
          script: |
            set -e

            rm -rf openv2x-aio-columbia.tar.gz && wget https://openv2x.oss-ap-southeast-1.aliyuncs.com/deploy/columbia/openv2x-aio-columbia.tar.gz
            rm -rf src && tar zxvf openv2x-aio-columbia.tar.gz
            cd src
            sh install.sh
